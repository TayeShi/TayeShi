===

可以用typeof运算符检测一个变量是对象还是数组吗？为什么？怎样检测？

不能 typeof 返回的是一个object。typeof返回的是一个对象类型。数组也是object
使用instanceof。 [] instanceof Array。返回true或false。判断实例的构造函数原型链。

===

localStorage、sessionStorage cookie的异同？

同：都依照同源策略，且都储存在客户端。
异：
1.是否与服务端进行传输：cookie是携带在http请求头里面的里面的，需要在客户端与服务端之间进行来回传输。localStorage、sessionStorage只存在于客户端，不需要与服务端进行传输。
2.储存大小：cookie一般在4k左右,localStorage、sessionStorage大小限制5M左右。
3.储存时间：localStorage是永久储存的，即使关闭页面储存也还在，且在同一个域名下的可以跨页面储存。sessionStorage是临时储存的，关闭当前窗口就消失了，不能跨页面储存。cookie只能在有效时间内获取，在同一个域名下都可以获取。

===

讲一下垃圾回收机制

垃圾收集器在一定的时间间隔内重复进行查找。找出不再继续使用的变量，释放其占用的内存。

标记清除，先给变量都标记上，然后除去正在引用的变量。剩下标记的就是离开作用域。没有被引用的变量。这些变量就会被垃圾收集器清除。这个方法是主流的方法。基本各大浏览器用的都是这种回收方式。
引用计数，追踪记录每一个值被引用的次数。当一个变量被引用类型值赋值时，这个值的引用次数就加一，如果同一个值又被赋予某个变量，这个值就再加一。反之，如果包含这个值的变量被赋值，这个值的引用就减一。当这个值为0时。表明这个值无法被访问了。可以将其占用的空间回收了。等下次垃圾收集器运行时。就将这些引用为零的值的内存释放。

===

什么是闭包？

闭包就是有权访问另一个函数的变量的函数。常见的闭包就是一个函数返回一个函数。内部函数可以访问外部函数的变量。且外部函数的变量不会被清理。因为内部函数的作用域链包含外部函数的活动对象。内部函数的的作用域链为：闭包的活动对象、外部函数的活动对象、全局变量对象。

===

离线缓存机制？ Web 标准已废弃

===

